Hardmock 1.3.7

* BUG FIX: expects! could not setup expectations for more than one concrete method on an object, since the method aliasing and rewriting was only taking place when the background mock instance was first created.  This logic has been updated and now you can do all the things you'd expect.

Hardmock 1.3.6

* BUG FIX: In Rails apps (and others) Hardmock and Fixtures battled viciously over "setup" and "teardown" and "method_added" (and any other clever test enhancement tool, namely Mocha) causing unpredictable results, notably failure to auto-verify mocks after teardown (leading to false positive tests).
  * The newly-added TestUnitBeforeAfter provides TestCase.before_setup and TestCase.after_teardown -- formal test wrapping hooks -- lets Hardmock provide its preparation and auto-verify behavior without contending for setup/teardown supremacy.

Hardmock 1.3.5

* Aliased should_receive => expects and and_return => returns for easier transition from rspec mock and flexmock users.

Hardmock 1.3.4

* Prevents accidental stubbing and mocking on NilClasses

Hardmock 1.3.3

* stubs! and expects! no longer require that their target methods exist in reality (this used to prevent you from stubbing methods that "exist" by virtue of "method_missing"
* Tweaked inner metaclass code to avoid collisions with rspec's "metaid" stuff
* Moved this project's Rake tasks into rake_tasks... otherwise Rails will load them, if Hardmock is installed as a Rails plugin
* Alias added: 'verify_hardmocks' is now an alias for 'verify_mocks'  (some internal projects were using this modified method name as a means of cooexisting with mocha)

Hardmock 1.3.2

November 2007

* adds 'with' as an alternate syntax for specifying argument expectations.

Hardmock 1.3.1

October 2007

* Can use stubs! on a mock object
* expects! now generates mocked methods that can safely transfer runtime blocks to the mock instance itself
* No longer need to call "prepare_hardmock_control" when using stubs in the absence of mocks
* Stubs of concrete class or instance methods are restored to original state in teardown

Hardmock 1.3.0

October 2007

* Adds stubs! and expects! method to all objects and classes to support concrete stubbing/mocking.

Hardmock 1.2.3

Sat Apr 28 01:16:15 EDT 2007

* Re-release of 1.2.2 (which was canceled)... tasks moved to lib/tasks

Hardmock 1.2.2

Sat Apr 28 00:41:30 EDT 2007

* assert_error has been broken out into its own lib file
* Gem package can now run all tests successfully
* Internal code refactoring; a number of classes that were defined in hardmock.rb are now in their own files

Hardmock 1.2.1

Sat Apr 28 00:41:30 EDT 2007

* (botched release, see 1.2.2)

Hardmock 1.2.0

* You can now use "expect" in place of "expects" if you must.
* "inspect" has been added to the list of methods NOT erased by MethodCleanout.

Hardmock 1.1.0

* "expects" replaces "expect" ("expect" now raises Hardmock::DeprecationError)
* "verify_mocks" is now implicit in teardown, you needn't call it anymore
* Mocking methods that Mock would otherwise inherit from Object (eg, to_s) is now possible
* require 'hardmock' is all that's required to use the library now; no need to include in TestCase

(previously called CMock, translated to Hardmock on 2006-12-10)
